*******************************************************
********** Suchen des HCO-Potential-Minimums **********
*******************************************************


      subroutine hcopot(f,RHC,RCO,ROH)
      IMPLICIT NONE
      integer j,loop,iv
      real*8 rmin(3),rmax(3),z1,z2,z3,m(3),h(3)
      real*8 pot,potmin,ma,mb,mc,au2ev,a0,pi
      parameter (au2ev = 27.2116d0)
      parameter (a0 = 0.52918d0)
      parameter (pi = 3.1415926536d0)
      real*8 pot3,c3,POTHCO,f
      REAL*8 V, RHC,RCO, CGAMMA, ROH
      integer istate


      ma =  1.0    !  H
      mb = 12.0    !  C
      mc = 16.0    !  O

      istate = 1      !  X-Flaeche



C       OPEN(10,FILE='pothco_hmk.para',status='old')


c ---------Initialisierung des Potentials----------
        call pot3in()
c -------------------------------------------------

c ----------Startwerte----------
c      rmin(1) = 2.5   !  R
c      rmax(1) = 3.5
c      rmin(2) = 2.0   !  r
c      rmax(2) = 3.0
c      rmin(3) = 2.0   !  gamma
c      rmax(3) = 3.0
c ------------------------------

       CGAMMA=(RHC*RHC+RCO*RCO-ROH*ROH)/(2*RHC*RCO)

   

        POT=0.0d0
C        POT= POTHCO(0.d0,0.d0,0.d0,0.d0)
c      iv = 5
      !do j = 1, 3
       ! m(j) = (rmax(j) + rmin(j))/2
       ! h(j) = (rmax(j) - rmin(j))/2
      !enddo
      !do loop = 1, 8
        !potmin = 9.9
        !do z1 = m(1)-h(1), m(1)+h(1), h(1)/iv
          !do z2 = m(2)-h(2), m(2)+h(2), h(2)/iv
           ! do z3 = m(3)-h(3), m(3)+h(3), h(3)/iv
c ----------Aufruf des Potentials---------------------
            !  c3 = dcos(z3)
             ! pot = pot3(z1,z2,c3,istate)
         POT= POTHCO(RHC,RCO,CGAMMA,ISTATE)
         pot=pot+.18140000
c ----------------------------------------------------
              !if (pot .lt. potmin) then
                !m(1) = z1
                !m(2) = z2
                !m(3) = z3
                !potmin = pot
              !endif
            !enddo
          !enddo
        !enddo
        !do j = 1, 3
         ! h(j) = h(j)/iv
        !enddo
      !enddo

       f=pot
c      write (6,'(a,f9.5,a)') 'V =', pot  !' eV'
c   write (6,66) 'R_min =', m(1), ' a.u. =', m(1)*a0,  ' A'
C      write (6,66) 'r_min =', m(2), ' a.u. =', m(2)*a0,  ' A'
C      write (6,66) 'g_min =', m(3), ' rad  =', m(3)*180/pi, ' deg.'
c      66   format (a,f9.5,a,f8.3,a)
      Return 
      end



* ------------------------------------------------------------
* ----------> ab hier kommt das Potential-Programm <----------
* ------------------------------------------------------------

c       FUNCTION POT3(R,RKLEIN,C,ISTATE)
c      IMPLICIT NONE
c      INTEGER ISTATE
c      REAL*8 POT3, R,RKLEIN,C, A
c      REAL*8 V, RHC,RCO,GAMMA, CGAMMA, X1, AU2EV, PI, POTHCO
c       EXTERNAL POTHCO
c      PARAMETER(AU2EV=27.2116D0,PI=3.141592654D0)
      !RCO= MAX(RKLEIN,1.6D0)         ! 14.1.94: frueher maximal 3.0 a.u.
      !X1= (16D0/28D0) * RCO
      !A= MAX( X1*X1 + R*R + 2D0*X1*R*C, 1D0 )
      !RHC= SQRT( A )                               ! ABSTAND RHC >= 1.
      !A= (R*R - RHC*RHC - X1*X1 ) / (-2D0*RHC*X1)  ! COS(GAMMA).
      !CGAMMA= MAX(MIN(A,1D0),-1D0)
      !GAMMA= 180D0/PI * ACOS( CGAMMA )
      !POT3= POTHCO(RHC,RCO,CGAMMA,ISTATE)
      !RETURN
      !END

       SUBROUTINE POT3IN()
       IMPLICIT NONE
       REAL*8 V, R/1D0/, RKL/1D0/, G/0D0/, POTHCO
       EXTERNAL POTHCO
       OPEN(10,FILE='pot_h2co.para',status='old')
       V= POTHCO(0D0,0D0,0D0,0)
       CLOSE(10)
       RETURN
       END

C****************************************************************

      FUNCTION POTHCO(RHC,RCO,RCOS, ISTATE)
C
C   H-C-O Potential:
C   Ab-Initio-Daten:  Prof. Hans-Joachim Werner (Stuttgart).
C   Rationaler Fit:   Hans-Martin Keller (Goettingen).
C
C   Das H-C und H-O Diatom-Potential wurde aus der Literatur
C   entnommen (s.u.), das C-O-Potential zusammen mit dem H-C-O-Potential
C   gefittet Asymptotik nur in Richtung des H - CO Kanals korrekt !
C
C   Alle Einheiten in atomic units !
C
C   ISTATE = 0     Initialisierung beider Flaechen ( X und A ).
C          = -1    nur X-Flaeche initialisieren.
C          = -2    nur A-Flaeche initialisieren.
C          = 1     Potentialwert auf X-Flaeche berechnen.
C          = 2     Potentialwert auf A-Flaeche berechnen.
C
      IMPLICIT NONE

      INTEGER ISTATE                    ! Initialiserung falls <>0, INPUT
      REAL*8
     $     RHC,                         ! R_HC in a.u.,             INPUT
     $     RCO,                         ! R_CO in a.u.,             INPUT
     $     RCOS,                        ! COS(gamma_HCO),           INPUT
     $     POTHCO                       ! Potentialwert in a.u.,   OUTPUT

C
C Zur Initialisierung werden die Koeffizienten KK(MLIN) und die
C Parameter AA(MTAN) ueber Unit 10 eingelesen. Organisation wie in
C hmkfit.f. Die Initialisierungssequenz sieht wie folgt aus:
C
c      OPEN(10,'pothco_hmk.para')
C   A= POTHCO(0d0,0d0,0d0, 0)
C   CLOSE(10)             ===
C

*********************** KONSTANTEN (wie "hmkfit.common") **********

C**   > KONSTANTEN:
      REAL*8 AU2ANG, AU2EV, EV2CM, KC2EV, AU2CM
      PARAMETER(AU2ANG=0.529177D0)      ! a_0 / Angstroem
      PARAMETER(AU2EV=27.2116D0)        ! hartree / eV
      PARAMETER(EV2CM=8065.44D0)        ! eV / cm^-1
      PARAMETER(KC2EV=23.061D0)         ! {kcal/mol} / eV
      PARAMETER(AU2CM=AU2EV*EV2CM)      ! hartree / cm^-1

C**   > ORDNUNG DER 1D-POLYNOME FESTLEGEN:
      INTEGER NHC, NCO, NWIN            ! Anzahl der Datenpunkte.
      PARAMETER(NHC=12, NCO=9, NWIN=12)

C**   > ORDNUNG DER POLYNOME:
      INTEGER GZHC, GZCO, GZWIN, MLIN(2)   ! GRAD IM ZAEHLER
      INTEGER GNHC, GNCO, GNWIN, MTAN(2)   ! GRAD IM NENNER
      INTEGER IXHC, IXCO, IXOH          ! FESTE VORFAKTOREN IM NENNER.
      INTEGER GWHC, GWCO, GWWIN         ! POLYNOME VOR WURZEL (KONISCHE D.)
      INTEGER GZ2CO, GN2CO, IX2CO       ! DIATOM-POTENTIAL v. C-O.
      INTEGER GZ2HC, GN2HC, IX2HC       ! DIATOM-POTENTIAL v. H-C.
      INTEGER GZ2OH, GN2OH, IX2OH       ! DIATOM-POTENTIAL v. O-H.
      INTEGER MAXLIN, MAXTAN
      PARAMETER(MAXLIN=500, MAXTAN=200) ! Maximalwerte fuer MLIN und MTAN.
C      PARAMETER(
C     $     GZHC= 5, GZCO= 3, GZWIN= 6,     ***** werden eingelesen *****
C     $     GNHC= 2, GNCO= 2, GNWIN= 2,
C     $     IXHC= -7, IXCO= -5,  IXOH= -3
C     $     GWHC= 3, GWCO= 2, GWWIN= 1,
C     $     GZ2CO= 3, GN2CO= 1, IX2CO= -7,
C     $     GZ2HC= 3, GN2HC= 1, IX2HC= -7,
C     $     GZ2OH= 3, GN2OH= 1, IX2OH= -7,
C     $     MLIN=(GZHC+1)*(GZCO+1)*(GZWIN+1)
C     $         + (GWHC+1)*(GWCO+1)*(GWWIN+1)
C     $         + (GZ2HC+1) + (GZ2CO+1) + 1,
C     $     MTAN= 2*(GNHC+1)*(GNCO+1)*(GNWIN+1)-2 + 3
C     $         + 2*GN2HC + 2*GN2CO )

C**   > OFFSET IN WURZEL UND NENNER (SIEHE getvt5.f):
      REAL*8 WURADD, NENADD, EASYM
C      PARAMETER(                          ***** werden eingelesen *****
C     $     WURADD=1D-5,          ! rundet Spitze von konischer Durchschneidung.
C     $     NENADD=1D-3,          ! begrenzt Nenner nach unten.
C     $     EASYM=11.169D0/AU2EV ) ! Energie bei 3 einzelnen Atomen.

C**   > BASISPOLYNOME (1d):
C     ( "P_K(X)= Produkt_{J=1,K}(X-NU(J))" ALS ERSATZ FUER "X**K" ) :
      REAL*8
     $     NUHC(NHC)/2.3D0,2.5D0, 2.1D0,3.0D0, 1.9D0,3.5D0,
     $               1.7D0,4.0D0, 1.5D0,5.0D0, 1.3D0,7.0D0/,
     $     NUCO(NCO)/2.2d0,1.9d0, 2.5d0,1.7d0, 3.0d0,2.05d0,
     $               2.35d0,3.5d0, 4.0d0/,
     $     NUWIN(NWIN)/100d0,120d0, 80d0,140d0, 60d0,160d0,     ! NEUE NULLST.
     $                  40d0,170d0, 20d0,180d0, 10d0,0d0/
C     $     NUWIN(NWIN)/120D0,140D0, 100D0,160D0, 80D0,170D0, ! ALTE NULLST.
C     $                  40d0,170d0, 20d0,180d0, 10d0,  0d0/


C******************* Variablen *************************************

      REAL*8
     $     XCOS(NWIN), NUCOS(NWIN),     ! Umrechnung XWIN,NUWIN -> cos(winkel)
     $     KK(MAXLIN,2),                ! Koeffizienten zu VV
     $     AA(MAXTAN,2),                ! nichtlineare Parameter
     $     V2CH, V2OH                   ! Diatom-Potentiale
      EXTERNAL V2CH, V2OH


      INTEGER I, J,K,L, LL,JJ, J1,J2,J3, ! Diverser Krimskrams.
     $     KS,I1,I2                     ! Nummer d. Potentialflaeche.
      LOGICAL QINIT(2)/.false.,.false./ ! zeigt an ob Parameter initialisiert.
      REAL*8
     $     PQ,  A, B, C, NENN,
     $     RHCSIN,RHCCOS, KONUS,        ! Anteil der konischen Durchschneidung.
     $     PHC, PCO, PCOS, POH,         ! 1d-Polynome.
     $     RHCI, RCOI, RCOSI, ROHI,     ! lokale Kopien der aktuellen Parameter
     $     THY, ACO, AHC, VPLUS,        ! Fuer Skalierung.
     $     PI                           ! PI.
      COMPLEX*16
     $     QQ1, QQ2, QQ3, QQ4,          ! 3 Nenner
     $     WURZ                         ! konische Durchschneidung.

      SAVE


      IF(ISTATE.LT.-2.OR.ISTATE.GT.2)
     $     STOP 'POTHCO: ISTATE out of range'

C**** > Initialisierung falls ISTATE<=0:

      IF(ISTATE.LE.0) THEN

C       ******************************
C       *                            *
C       *     Parameter einlesen     *
C       *                            *
C       ******************************

        IF(ISTATE.EQ.0)THEN
          I1= 1                         ! 1. Flaeche in Datei (Unit 10).
          I2= 2                         ! letzte Flaeche     "           .
        ELSE IF(ISTATE.EQ.-1) THEN
          I1= 1                         ! 1. Flaeche in Datei (Unit 10).
          I2= 1                         ! letzte Flaeche        "        .
        ELSE IF(ISTATE.EQ.-2) THEN
          I1= 2                         ! 1. Flaeche in Datei (Unit 10).
          I2= 2                         ! letzte Flaeche        "        .
        END IF


C**** > INITIALISIERUNG UND AUSGABE DER PARAMETER:

        PI= ACOS(-1D0)

c        WRITE(6,'(/A)') ' Nullstellen R_HC:'
        DO J1=1,NHC
c          WRITE(6,'(A,I4,A,G14.6)')
c     $         ' J1=',J1,' NUHC=',NUHC(J1)
        END DO
c        WRITE(6,'(/A)') ' Nullstellen R_CO:'
        DO J2=1,NCO
c          WRITE(6,'(A,I4,A,G14.6)')
c     $         ' J2=',J2,' NUCO=',NUCO(J2)
        END DO
c        WRITE(6,'(/A)') ' Nullstellen GAMMA_HCO:'
        DO J3=1,NWIN
          NUCOS(J3)= COS(PI/180D0*NUWIN(J3)) ! Nullstellen d. 1d-Polynome.
c          WRITE(6,'(A,I4,A,G14.6)')
c     $       ' J3=',J3,' NUWIN=',NUWIN(J3)
        END DO

c         OPEN(10,FILE='hmkfit_u3.para')

C**     > GEMEINSAME PARAMETER DER FLAECHEN EINLESEN:
C
C   Achtung:
C     Beide Flaechen muessen mit dem gleichen Funktionenansatz
C     gefittet sein. Speziell muss der Grad aller Polynome uebereinstimmen.
C

        GZHC=5
        GZCO=4
        GZWIN=6
        GNHC=3
        GNCO=3
        GNWIN=3
        IXHC=-5
        IXCO=-4
        IXOH=-2
        GWHC=3
        GWCO=1
        GWWIN=1
        GZ2HC=3
        GN2HC=1
        IX2HC=-7
        GZ2CO=3
        GN2CO=1
        IX2CO=-7
        GZ2OH=3
        GN2OH=1
        IX2OH=-7
        WURADD=0.1000E-04
        NENADD=0.1000E-02
        EASYM=0.4104499552
 

c        WRITE(6,'(/A,21(/A,I5))') ' RATIONALE FIT BERECHNEN:',
c     $       ' GRAD DES ZAEHLERS IN R_HC: GZHC=', GZHC,
c     $       '        ...           R_CO: GZCO=', GZCO,
c     $       '        ...      GAMMA_HCO: GZWIN=', GZWIN,
c     $       ' GRAD DES NENNERS IN R_HC: GNHC=', GNHC,
c     $       '        ...          R_CO: GNCO=', GNCO,
c     $       '        ...         R_HCO: GNWIN=', GNWIN,
c     $       ' POTENZ VORFAKTOR IN R_HC: IXHC=', IXHC,
c     $       '        ....         R_CO: IXCO=', IXCO,
c     $       '        ....         R_OH: IXOH=', IXOH,
c     $       ' GRAD VORFAKTOR WURZEL IN R_HC: GWHC=', GWHC,
c     $       '        ...               R_CO: GWCO=', GWCO,
c     $       '        ...          GAMMA_HCO: GWWIN=', GWWIN,
c     $       ' DIATOM-POTENTIAL IN H-C, ZAEHLER: GZ2HC=', GZ2HC,
c     $       '        ...                NENNER: GN2HC=', GN2HC,
c     $       '        ...             VORFAKTOR: IX2HC=', IX2HC,
c     $       ' DIATOM-POTENTIAL IN C-O, ZAEHLER: GZ2CO=', GZ2CO,
c     $       '        ...                NENNER: GN2CO=', GN2CO,
c     $       '        ...             VORFAKTOR: IX2CO=', IX2CO,
c     $       ' DIATOM-POTENTIAL IN O-H, ZAEHLER: GZ2OH=', GZ2OH,
c     $       '        ...                NENNER: GN2OH=', GN2OH,
c     $       '        ...             VORFAKTOR: IX2OH=', IX2OH


C**     > Schleife ueber Flaechen:





          KK(1:230,1)=(/
     $        -102.3642648561698  ,
     $       -223.8324780856327   ,
     $       -229.2232571697028   ,
     $       -48.57954835777963   ,
     $       -90.48799855845229   ,
     $       2.133629753052144    ,
     $       20.78328230716039    ,
     $       125.0576014177083    ,
     $      -810.8167464051229    ,
     $      -795.3829226744469    ,
     $     -127.5911435704098     ,
     $     -135.2099441469195     ,
     $     -338.0373674252449     ,
     $     -333.0332272813132     ,
     $      12.30626364891182     ,
     $     -23.57090141308276     ,
     $      274.1309686273589     ,
     $      279.3031948027172     ,
     $      340.3902022302497     ,
     $      279.5659033449791     ,
     $      617.6093283305680     ,
     $      91.14137331625797     ,
     $      123.7693241197913     ,
     $      201.3266920586976     ,
     $     -61.85781929365798     ,
     $     -62.90043656035403     ,
     $     -40.23424068905879     ,
     $     -56.69493566240568     ,
     $     -577.9987507415552     ,
     $     -205.9146204096183     ,
     $     -259.0460674859898     ,
     $      59.94978832094139     ,
     $      12.11125540829333     ,
     $     -83.78255903373741     ,
     $      195.4989807964159     ,
     $     -440.1010286048440     ,
     $      3.913099377250359     ,
     $      406.0486540260633     ,
     $     -229.1213483907013     ,
     $      299.7792400507569     ,
     $     -115.3284820500740     ,
     $      169.0710400023649     ,
     $     -100.4745838053893     ,
     $     -1.216385912188404     ,
     $      152.2344305524170     ,
     $     -89.14760402154498     ,
     $      634.2632865729968     ,
     $     -279.0816912433667     ,
     $      10.04049921951077     ,
     $     -84.62314096311682     ,
     $      64.75991506893541     ,
     $      246.0291955246738     ,
     $     -140.9913735141963     ,
     $     -258.1054801555315     ,
     $      136.7878001179938     ,
     $      4857.851991345527     ,
     $      6797.313896141979     ,
     $      3298.068909508796     ,
     $     -118.4479934713121     ,
     $      93.17259341847122     ,
     $     0.2771924181577319     ,
     $    -8.3103178407696210E-02 ,
     $      1397.815616643877     ,
     $      2270.116801948670     ,
     $      756.5866078527707     ,
     $     -111.5323600576005     ,
     $      36.69205901735867     ,
     $      18.60680291506252     ,
     $     -52.37425650107662     ,
     $     -176.6762519306833     ,
     $     -961.9967192363852     ,
     $      268.3632251298682     ,
     $      1196.539962406902     ,
     $     -829.9956847985071     ,
     $     -16.64981175668163     ,
     $      38.53665272864394     ,
     $     -61.20563961719793     ,
     $     -232.2043507270042     ,
     $      306.6740191910333     ,
     $     -32.43313907670390     ,
     $     -357.3172935001143     ,
     $      474.7605598607524     ,
     $     -62.25287999786418     ,
     $    -0.9824147856279946     ,
     $     -104.3857931855446     ,
     $      39.03331893800415     ,
     $      378.5683259291752     ,
     $     -138.2766912079269     ,
     $     -278.8847258639972     ,
     $      116.9966413015339     ,
     $      2463.139269660528     ,
     $      3620.663699315280     ,
     $      2284.269535562581     ,
     $     -11.14628433522054     ,
     $     -16.32678560481693     ,
     $     -6.040767802721676     ,
     $      47.80117030758107     ,
     $      193.1774078877830     ,
     $      853.2978909288448     ,
     $      349.3643216226028     ,
     $      239.2413656462500     ,
     $     -112.4210079539540     ,
     $      99.07862024675455     ,
     $      9.958507279887932     ,
     $     -154.3690710918931     ,
     $     -394.3213631671865     ,
     $      29.27278578711602     ,
     $      688.2453856597641     ,
     $     -345.3190638465965     ,
     $     -291.3579735991055     ,
     $      143.8063868604589     ,
     $     -33.94526013576149     ,
     $      52.80869095791784     ,
     $      88.47538375535312     ,
     $     -100.3048317415045     ,
     $     -88.64840165177142     ,
     $     -349.1698838213803     ,
     $      203.9787195401600     ,
     $     -47.75346845197873     ,
     $     -7.917370283346377     ,
     $      50.83338929772390     ,
     $      67.52077887719220     ,
     $     -129.9432482355469     ,
     $     -15.69161231121332     ,
     $      85.75203742881668     ,
     $     -1172.808650635494     ,
     $     -2523.659802882607     ,
     $     -802.8074465843305     ,
     $      238.8394599506255     ,
     $     -154.3007747821756     ,
     $      55.66907788434542     ,
     $     -6.491619943996329     ,
     $     -2232.960595513826     ,
     $     -3233.615571599992     ,
     $     -1473.081562345423     ,
     $      370.3337270715483     ,
     $     -175.7810304233967     ,
     $      59.12537484275104     ,
     $      13.22064103716184     ,
     $     -175.4360710382207     ,
     $     -210.9375035469391     ,
     $     -86.92163088805670     ,
     $     -62.10927551767438     ,
     $      132.0043278932257     ,
     $      292.6674782364857     ,
     $     -148.6091687082954     ,
     $      216.4383246434683     ,
     $      141.1529077685202     ,
     $     -54.93624944886488     ,
     $      321.3364890659310     ,
     $      61.48811876962574     ,
     $     -629.4683425720093     ,
     $      166.1584768915308     ,
     $      95.04491983080933     ,
     $      1.776335778909391     ,
     $     -106.0351915061385     ,
     $      39.67198367246088     ,
     $     -12.81089619685357     ,
     $     -224.7773701933781     ,
     $      133.4732501077329     ,
     $     -58.35483282485593     ,
     $     -483.3899833575089     ,
     $     -348.6045548030689     ,
     $      33.48283225085869     ,
     $     -28.60351961513664     ,
     $     -12.30139790082563     ,
     $      17.38231928887547     ,
     $     -107.2140190388242     ,
     $     -497.1005628345201     ,
     $     -433.4660336203330     ,
     $      79.43341065828771     ,
     $     -33.18333744133399     ,
     $     -45.72987813364455     ,
     $      21.43705170877848     ,
     $     -4.414794050384306     ,
     $     -29.76764193495310     ,
     $      57.03424945478221     ,
     $     -144.0890843012717     ,
     $      14.25352728183507     ,
     $      344.5169271778832     ,
     $     -162.8681207753513     ,
     $     -21.52007352569133     ,
     $     -37.40507177718897     ,
     $      24.67947071348613     ,
     $      107.0961582816427     ,
     $     -28.88291950420598     ,
     $     -178.6459668112792     ,
     $      83.06469812273495     ,
     $      61.65451216284262     ,
     $     -41.32986329164783     ,
     $     -76.15218920699503     ,
     $      126.4879673427196     ,
     $      30.51525209151475     ,
     $     -212.8189112610055     ,
     $      53.76983580526564     ,
     $     -40.95919723762799     ,
     $      41.38913267840285     ,
     $      1.098763863298517     ,
     $     -22.09850981812001     ,
     $      18.74334017833761     ,
     $    -24.75277332919399      ,
     $     3.801536169528781      ,
     $    -35.01418667915119      ,
     $     14.33075364273815      ,
     $     28.94674385784175      ,
     $     2.081029696330069      ,
     $    -5.993619572400924      ,
     $    -3.691058560126781      ,
     $    -1.076057706194047      ,
     $     5.675436427774919      ,
     $    -1.450532050088823      ,
     $    -9.346954382803695      ,
     $     46.43272325956291      ,
     $    -14.12047890639938      ,
     $    -170.8385988842537      ,
     $     84.11139306016071      ,
     $    0.9746106272150564      ,
     $     57.31846067786712      ,
     $    -37.39540129337196      ,
     $    -159.7267578620323      ,
     $     91.36840318939784      ,
     $     43.14185768415464      ,
     $    -25.90407966645484      ,
     $    -43.79592033617330      ,
     $     15.57245338243092      ,
     $     55.92305203189153      ,
     $    -34.98806196795652      ,
     $     -32.91701499497834     ,
     $      197.5493637604582     ,
     $     -76.89202959536505 /)

          KK(1:214,2)=(/
     $   -46.68955154226235       ,
     $    -132.7614038798816      ,
     $    -248.2544830287090      ,
     $    -106.7365909753246      ,
     $     26.97433716466096      ,
     $     107.3260888319342      ,
     $    -102.1818440290246      ,
     $    -131.5154964472838      ,
     $     176.0603132622863      ,
     $     116.2877798061771      ,
     $    -156.4897656596655      ,
     $    -80.70115690479501      ,
     $    -137.7137803456877      ,
     $     488.9883421579682      ,
     $    -456.2804718811110      ,
     $    -46.55187360586137      ,
     $     308.1750149730934      ,
     $    -99.53001885077492      ,
     $     64.53236846262706      ,
     $     114.7919153278164      ,
     $    -327.3883951802749      ,
     $     875.5274950721313      ,
     $    -231.6154736189225      ,
     $    -770.6830937747527      ,
     $     309.5576074700616      ,
     $    -37.31873174807356      ,
     $     195.4660249509235      ,
     $    -109.2310501012664      ,
     $    -340.7407842177943      ,
     $     260.1849249554602      ,
     $     128.9611862549643      ,
     $    -120.3488721499209      ,
     $     14.72669881010328      ,
     $    -60.02542658807373      ,
     $     110.7963199458856      ,
     $    -36.96113818174673      ,
     $    -45.42772800517364      ,
     $     402.7452994857089      ,
     $    -201.0775756692368      ,
     $     23.50347982080719      ,
     $     167.2659782088728      ,
     $    -370.8629394374778      ,
     $     850.7977153432225      ,
     $    -345.7562031445543      ,
     $    -145.7388646767452      ,
     $     115.1232235441378      ,
     $    -191.5575770542816      ,
     $    -510.2865674403949      ,
     $     1084.397512312092      ,
     $    -1996.804438949881      ,
     $     667.9814973033116      ,
     $     23.44699493954813      ,
     $    -23.07054628047112      ,
     $     195.9237850065283      ,
     $     84.42364281154151      ,
     $    -733.8957964846015      ,
     $     809.7535488547586      ,
     $     93.49825018030522      ,
     $    -600.5917107238562      ,
     $     100.1716901459618      ,
     $     16.25780511730074      ,
     $    -169.2222615901640      ,
     $     284.7021963630947      ,
     $    -225.0325767306836      ,
     $    -215.2992796067308      ,
     $     1601.082883901349      ,
     $    -629.2787553573677      ,
     $    -94.52390618475569      ,
     $     145.9533981858237      ,
     $    -2.303316537695515      ,
     $     773.8564820237838      ,
     $    -552.7481132510865      ,
     $    -48.58787993155969      ,
     $     113.3098485553124      ,
     $     87.95014050329203      ,
     $     436.9027205345983      ,
     $    -758.6743685295238      ,
     $     1384.560812570328      ,
     $    -547.4375929946192      ,
     $    -130.4397166129234      ,
     $     136.5854993751978      ,
     $    -74.47213015581380      ,
     $     88.74302258369453      ,
     $     366.6227674620797      ,
     $    -1831.587388186101      ,
     $     869.4009489378270      ,
     $    -257.6156319231613      ,
     $     69.05318206078508      ,
     $     78.87280601474097      ,
     $     209.6154738658151      ,
     $    -24.03747084052253      ,
     $     170.5274773540217      ,
     $    -441.6894062015240      ,
     $     703.1754181108021      ,
     $    -107.0037741693105      ,
     $     63.79879249786067      ,
     $    -766.1777496201255      ,
     $     1069.853407673195      ,
     $     803.6461675960979      ,
     $    -1439.946515166874      ,
     $     1793.480157622342      ,
     $    -339.9629997457932      ,
     $    -100.2984365342760      ,
     $     359.2686686901866      ,
     $    -336.0229957685972      ,
     $    -191.6658071231343      ,
     $     374.9056699161374      ,
     $    -449.0402774298851      ,
     $     75.27690134579463      ,
     $     27.79849948803851      ,
     $     19.49131838344219      ,
     $    -156.6230673099573      ,
     $     878.1593224702605      ,
     $    -491.2275880768643      ,
     $     312.8494442454996      ,
     $    -86.78827824688989      ,
     $    -91.86882935347332      ,
     $     2.878344905195556      ,
     $     87.06679861537076      ,
     $    -108.3484122960167      ,
     $     122.6782642786766      ,
     $    -508.0346233698801      ,
     $     166.5023880765771      ,
     $    -12.63138195372600      ,
     $    -276.0765514666404      ,
     $     523.8727086289040      ,
     $     540.5671313120647      ,
     $    -962.8869989014595      ,
     $     2196.155233657320      ,
     $    -674.7220652732703      ,
     $     165.2400781637141      ,
     $    -922.7968330717131      ,
     $     921.9501024090974      ,
     $     668.9389006668498      ,
     $    -1029.605751650210      ,
     $     1862.815790542621      ,
     $    -559.7216019435214      ,
     $     56.67174193126515      ,
     $     561.1394707648680      ,
     $    -858.8580302389150      ,
     $    -2384.464820409461      ,
     $     2387.294851975693      ,
     $    -3141.258573277748      ,
     $     870.0993702902041      ,
     $     22.88525706800887      ,
     $    -188.2467278379622      ,
     $     162.9578949840529      ,
     $     2.592653740589398      ,
     $    -59.54617777079692      ,
     $     102.5173306441944      ,
     $    -27.55125102699962      ,
     $    -30.92180313008859      ,
     $    -87.90958206680168      ,
     $     44.65637235367808      ,
     $     303.5380419055625      ,
     $    -153.6638725963367      ,
     $    -136.9964285361966      ,
     $     71.39052741171878      ,
     $    -21.63028597985246      ,
     $    -166.0896030491221      ,
     $     150.8543805465578      ,
     $    -203.9122387904034      ,
     $     107.0273708439659      ,
     $     662.8262321605353      ,
     $    -376.9143295890410      ,
     $     28.47036552239846      ,
     $    -12.83355092147063      ,
     $    -98.94454073623642      ,
     $    -689.6307763413840      ,
     $     642.2357362299380      ,
     $    -46.91794095448740      ,
     $    -177.9635372792466      ,
     $     56.85451850471480      ,
     $    -134.4582749834306      ,
     $     5.274152371786363      ,
     $    -409.8177035018258      ,
     $     385.3865860136953      ,
     $    -1265.005705409996      ,
     $     531.3189599285537      ,
     $     37.32611962116079      ,
     $    -66.40012020013260      ,
     $     32.78734515293981      ,
     $    -110.3964024628888      ,
     $     70.56504135634748      ,
     $    -45.20616374263309      ,
     $     8.544782461817729      ,
     $     10.60767007062019      ,
     $     6.129532598513677      ,
     $     5.430329307539665      ,
     $     43.12872210968844      ,
     $    -68.40499843933451      ,
     $     218.9409883324794      ,
     $    -77.46528987513076      ,
     $     17.09340164535827      ,
     $     101.9194367233015      ,
     $    -156.0341416560686      ,
     $    -543.6409428324727      ,
     $     559.4759747111477      ,
     $    -1179.632764452079      ,
     $     409.1361604243058      ,
     $    -39.11447028088879      ,
     $     381.5970603436644      ,
     $    -402.1807388461816      ,
     $    -1014.537134436114      ,
     $     1019.503060910288      ,
     $    -1796.421228367226      ,
     $     588.5976613865548      ,
     $    -38.78954131176522      ,
     $    -461.8400337380177      ,
     $     740.6484843747148      ,
     $     457.6429963777664      ,
     $    -935.8605422513303      ,
     $     2352.625175531674      ,
     $    -805.7285819851076 /)

           AA(1:132,1)=(/
     $    -0.1029721882397825     ,
     $     0.4250195542943785     ,
     $     -1.146207169853580     ,
     $     4.2900417561754917E-02 ,
     $     3.6414488934825927E-02 ,
     $     0.7490208383625111     ,
     $      1.066953178579101     ,
     $    -0.2416139967447858     ,
     $    -0.4344081177715916     ,
     $     0.9982915674640133     ,
     $     1.8597578447849587E-02 ,
     $    -1.6936833086293387E-03 ,
     $     0.5933271134155593     ,
     $    -0.2070466515321160     ,
     $    -0.3888717415500419     ,
     $     0.2425329345517127     ,
     $     0.8553840823686923     ,
     $     0.2916036970956639     ,
     $    -0.3410188882045778     ,
     $    -1.1872176413611976E-02 ,
     $     -1.114610555593880     ,
     $    -0.7431120031157386     ,
     $     0.9821485822333149     ,
     $     0.5755513158010179     ,
     $    -2.5584954878685433E-02 ,
     $     3.2727175919042926E-03 ,
     $     0.1613556048047317     ,
     $     0.1509714391148883     ,
     $     8.4735782823154165E-02 ,
     $     0.1226248106891019     ,
     $    -0.2428593081659480     ,
     $    -0.2111302741757463     ,
     $     4.3652308069946771E-02 ,
     $    -0.1236486979814618     ,
     $     0.2154941243431830     ,
     $    -0.4771041003993555     ,
     $    -0.5552351586215860     ,
     $    -0.5275495542710191     ,
     $    -0.5254275671800256     ,
     $     0.8484495063364053     ,
     $    -0.8526462383944073     ,
     $    -0.8016499276464675     ,
     $     6.6830361649154443E-02 ,
     $     4.8051855182546385E-02 ,
     $    -2.1830800453695752E-02 ,
     $     0.8061703566826735     ,
     $     0.4409255287744045     ,
     $    -0.3037913458561444     ,
     $     1.3201069127727881E-02 ,
     $    -0.1568202491219710     ,
     $    -0.1254259306657309     ,
     $     0.2020125703411936     ,
     $     0.2634173640600634     ,
     $     0.3835069434145004     ,
     $    -0.1832787151221740     ,
     $    -0.6140682175674833     ,
     $     3.0776544467232592E-02 ,
     $     5.3108698893170728E-02 ,
     $     2.6579179838021681E-02 ,
     $    -1.0952885707972331E-02 ,
     $    -6.3094832196031209E-02 ,
     $    -8.2231534020235836E-02 ,
     $     6.6545563404406555E-03 ,
     $     7.8555096693948168E-02 ,
     $     0.6877134043089654     ,
     $     0.1844701867481893     ,
     $     0.1895456973268370     ,
     $     0.5154536644982214     ,
     $    -4.1714732726931734E-02 ,
     $    -0.1924115588049206     ,
     $    -0.1008763999416448     ,
     $    -0.4371430783551998     ,
     $     0.1935238439545574     ,
     $    -0.1337074372355289     ,
     $     0.2375866021157033     ,
     $     0.1774437956737314     ,
     $    -0.5732004225706689     ,
     $    -0.1046372098744483     ,
     $     0.1448413815907097     ,
     $    -0.1615186908675458     ,
     $    -6.7231991821775278E-02 ,
     $    -0.1545767049621538     ,
     $     6.9358913863139832E-02 ,
     $    -0.1920731216663369     ,
     $     0.2440494359938217     ,
     $     0.2440556070346933     ,
     $    -0.2551632353514210     ,
     $    -2.3548480795150444E-03 ,
     $     4.5818432568981854E-03 ,
     $     2.8652456482220669E-02 ,
     $    -2.2416439257205593E-02 ,
     $     2.5776299466247030E-02 ,
     $    -2.8419514809675136E-02 ,
     $    -3.7958255654183648E-02 ,
     $     4.4825371415423435E-02 ,
     $     4.1506823106745149E-03 ,
     $    -0.1022751709283327     ,
     $     0.1558335241394002     ,
     $    -0.2114976592655124     ,
     $    -9.2332219104681770E-02 ,
     $     7.4028116964420701E-02 ,
     $    -5.8948206614693445E-02 ,
     $     9.1579063748083556E-02 ,
     $     0.1035037225185845     ,
     $     3.0876849434624518E-02 ,
     $     2.3185758883178288E-02 ,
     $    -4.0201766245374117E-02 ,
     $    -7.0703212026091172E-02 ,
     $     2.9380299170807981E-02 ,
     $    -3.4174653058747811E-02 ,
     $     1.3723011813671219E-02 ,
     $     0.1048785180015750     ,
     $     1.0896296134048297E-02 ,
     $     3.0841116488952561E-02 ,
     $    -3.9948144114051393E-03 ,
     $     4.4515135068706940E-02 ,
     $    -4.6474811747021928E-02 ,
     $    -4.2855314535294127E-02 ,
     $     4.2991870507337521E-02 ,
     $    -1.0853974247155805E-02 ,
     $    -2.1519785504248239E-03 ,
     $    -5.9750124792646627E-03 ,
     $     2.3448167641524050E-03 ,
     $    -5.5858365488456888E-03 ,
     $     6.7558532034891561E-03 ,
     $     7.6977299717236550E-03 ,
     $    -7.4751155499510674E-03 ,
     $    -2.5147185013483798E-04 ,
     $      1.407757722547541     ,
     $     -2.065000000000000     ,
     $     -4.534000000000000     ,
     $     0.7289000000000000 /)

       AA(1:128,2)=(/
     $       0.3108535659309931     ,
     $       0.3744363323678975     ,
     $      -7.3237226370474945E-02 ,
     $      -0.2148727221259291     ,
     $      -0.5106519065489622     ,
     $        1.055604007096824     ,
     $       0.6818328371514257     ,
     $       0.1280471163518639     ,
     $       -1.145109699404557     ,
     $      -0.6438301608187292     ,
     $        2.177521820024120     ,
     $        1.911974327653204     ,
     $       0.2934711968933624     ,
     $       -1.039827497234585     ,
     $      -0.9032075490065353     ,
     $      -0.4038439357586540     ,
     $        1.065978241863624     ,
     $       0.4813356392445635     ,
     $       -1.979776975001070     ,
     $      -0.3084441970136803     ,
     $       0.4455582880356647     ,
     $      -0.1209958296983854     ,
     $       0.3799489216994007     ,
     $       0.4415584860582942     ,
     $      -4.4769362818139563E-02 ,
     $      -5.7335304324229390E-02 ,
     $       0.2232783134591138     ,
     $       3.2571516206128873E-02 ,
     $      -0.1129315473353429     ,
     $       8.9530684915025138E-02 ,
     $      -2.4654544296720069E-02 ,
     $      -0.1290583953461463     ,
     $      -0.3164496452452836     ,
     $        1.506396387205164     ,
     $       -1.495325411761925     ,
     $       -2.156529473687699     ,
     $       0.3542196319040959     ,
     $       5.8880200433775870E-02 ,
     $       1.6234962794687439E-02 ,
     $       0.1801986624061651     ,
     $      -0.8131433933384096     ,
     $      -8.5276142292994100E-02 ,
     $      -0.9790285924082973     ,
     $        1.579991767193859     ,
     $        1.179024853884256     ,
     $      -0.6007796723865474     ,
     $       2.9276201799600787E-02 ,
     $       1.6309067151745987E-02 ,
     $      -0.3208869063859959     ,
     $       0.2881688578553342     ,
     $      -0.3318783976102956     ,
     $      -0.3211223322853876     ,
     $       0.5002782814705030     ,
     $       0.4757562424722126     ,
     $      -0.1059765356235709     ,
     $      -0.5899527169797452     ,
     $       6.7420482428813544E-02 ,
     $      -3.1838779128518686E-02 ,
     $       6.9750513982306958E-02 ,
     $       1.0568015565168414E-02 ,
     $      -0.1034094734400555     ,
     $      -6.7807923605146175E-02 ,
     $       1.9853698709697838E-02 ,
     $       0.1002879252565328     ,
     $       0.4244474642515175     ,
     $      -0.8968236904836642     ,
     $       0.4703431666270315     ,
     $       0.1044573332667736     ,
     $      -0.1093500883849013     ,
     $       0.4839286194245138     ,
     $      -4.9015905381309857E-02 ,
     $      -6.8263046628754723E-02 ,
     $       0.4061392744101804     ,
     $      -0.1311610358512195     ,
     $      -0.8210290020998422     ,
     $      -6.1064192544134331E-02 ,
     $       0.2873472979750309     ,
     $      -0.1031472581252343     ,
     $      -7.1501164202506490E-02 ,
     $       0.3005865296930648     ,
     $      -1.4232912422141662E-02 ,
     $      -5.9574946670234814E-03 ,
     $       0.1213906541346873     ,
     $      -6.8107567118600276E-02 ,
     $      -0.1903466743734334     ,
     $       0.2978002520823761     ,
     $       0.1282075932184082     ,
     $      -0.3027823908209080     ,
     $      -1.0697732941241531E-02 ,
     $       9.5347203872742595E-03 ,
     $      -1.4791748598438435E-03 ,
     $       9.0421457162585123E-03 ,
     $       2.5674803531092236E-02 ,
     $      -4.8230827862992078E-02 ,
     $      -2.0015205025691703E-02 ,
     $       4.4444160268156216E-02 ,
     $      -6.6465049801266343E-02 ,
     $       0.4420096835515033     ,
     $       0.2654286749611125     ,
     $      -0.2267765548765344     ,
     $      -0.3130581408439944     ,
     $      -0.1430440639174838     ,
     $       0.1327676238665031     ,
     $       7.4939474425083086E-02 ,
     $      -8.7198859764347381E-02 ,
     $      -0.1807926642264377     ,
     $       2.1425941396266955E-03 ,
     $       7.6272612329256889E-02 ,
     $       0.1174010532928881     ,
     $       0.1943332737757385     ,
     $      -6.7052945107738904E-02 ,
     $      -0.2024073958411519     ,
     $       2.0575479896164948E-02 ,
     $       3.7875564105549951E-02 ,
     $       9.8873632886397368E-03 ,
     $      -5.9527393283773256E-03 ,
     $      -1.2435652327913747E-02 ,
     $      -9.0987744901284612E-02 ,
     $      -7.6400710318896108E-03 ,
     $       9.5484145514609792E-02 ,
     $      -8.9121374565155837E-04 ,
     $      -3.6671601423634054E-03 ,
     $      -2.3681049341721357E-03 ,
     $       1.7454942322121315E-04 ,
     $       1.8612103221899795E-04 ,
     $       1.0718097961906122E-02 ,
     $       2.2797154263141822E-03 ,
     $      -1.1095894412756850E-02 /)


        DO KS=I1,I2

C         > Initialisierung testen:
          IF(QINIT(KS)) THEN             ! Test ob schon mal initialisiert.
c            WRITE(6,'(/72(1H*)/A/72(1H*)/)')
c     $           ' HCO-Potential nochmal initialisisert !'
          ELSE
            QINIT(KS)=.true.
          END IF

C         > Parameter einlesen:
          MLIN(KS)=(GZHC+1)*(GZCO+1)*(GZWIN+1)
     $         + (GZ2CO+1)              ! + 1 ! + (GZ2HC+1) + (GZ2OH+1)
          MTAN(KS)= 2*(GNHC+1)*(GNCO+1)*(GNWIN+1)-2
     $         + 2*GN2CO                ! + 2*GN2HC + 2*GN2OH

          IF(KS.EQ.1) THEN               ! Mit Konus:
            MLIN(KS)= MLIN(KS) + (GWHC+1)*(GWCO+1)*(GWWIN+1)
            MTAN(KS)= MTAN(KS) + 4
          END IF

          IF(MLIN(KS).GT.MAXLIN)
     $         STOP ' pothco: Parameter MAXLIN ist zu klein !'
          IF(MTAN(KS).GT.MAXTAN)
     $         STOP ' pothco: Parameter MAXTAN ist zu klein !'

c          WRITE(6,'(/A,I2,A,2(/A,I5))') ' Flaeche Nr.', KS,' :',
c     $         ' ANZAHL KOEFFIZIENTEN IM ZAEHLER: MLIN=',MLIN(KS),
c     $         '        ...           IM NENNER: MTAN=',MTAN(KS)

        END DO

C       CLOSE(10)

        POTHCO= 0d0
C       GOTO 999                        ! ******** Ausgang ******

      ELSE

C       ******************************
C       *                            *
C       *  Potentialwert berechnen   *
C       *                            *
C       ******************************

C****   > Koordinaten nach (RHCI,RCOI,RCOSI) kopieren und skalieren:
        RHCI= RHC                                      ! interne Kopien.
        RCOI= RCO
        RCOSI= RCOS
        VPLUS= 0D0                                     ! Potential-Offset.

C**     > **** r_hc und r_co skalieren *****
        THY= TANH(1.1d0*(RHCI-4.4d0))                  ! innen -1, aussen 1.
        A= 0.75d0 - 0.25d0 * THY                       ! innen 1, aussen 1/2.
        AHC= 1d0 + (-0.002d0 + 0.014d0 * RCOSI ) * A   ! Skalierung in R_HC.
        ACO= 1d0 +         0.012d0           * A       ! Skalierung in R_CO.
        RHCI= AHC * (RHCI-2.11d0) + 2.11d0
        RCOI= ACO * (RCOI-2.23d0) + 2.23d0
        VPLUS= ( 0.5d0 * THY - 0.5d0 ) * 50d-3 / 27.2116d0 ! innen -50 meV.
C
C       bei gamma= 120 Grad ( cos()=-0.5, etwa Potentialminimum ) gilt:
C         AHC= 1 - 0.009 = 0.991   (innen, aussen die halbe Verzerrung)
C         ACO= 1 + 0.012 = 1.012   (            "            )
C
C       bei gamma= 0 Grad ( O-H Seite ) gilt:
C         AHC= ACO = 1.012 innen (1.006 aussen) .
C

C**     > Datenbereich einschraenken:
        RHCI= MAX(RHCI,1.3d0)            ! R_HC > 1.3 a.u.
        RCOI= MAX(RCOI,1.5d0)            ! R_CO > 1.5 a.u.
C	  Write(6,*) "About to Sqrt"
        ROHI= SQRT( RHCI**2 + RCOI**2 - 2d0*RHCI*RCOI*RCOSI )
C	  Write(6,*) "Finished the Sqrt"
        ROHI= MAX(ROHI,0.01d0)          ! zur numerischen Stabilitaet.

        KS= ISTATE
        IF(.NOT.QINIT(KS))
     $     STOP 'POTHCO: Flaeche nicht initialisiert !'

C****   > ALLE NENNER BERECHNEN:
        JJ= 1                           ! Index in AA(JJ,KS) (Nenner).

C      QQ1=(1d0,0d0)                     ! *** QQ_HC(R_HC)
C      PHC= 1d0
C      DO J=1,GN2HC
C        PHC= PHC * ( RHCI - NUHC(J) )   ! P_{HC,J}(R_HC)
C        QQ1= QQ1 + DCMPLX( AA(JJ,KS)*PHC, AA(JJ+1,KS)*PHC )
C        JJ= JJ + 2
C      END DO

        QQ2=(1d0,0d0)                   ! *** QQ_CO(R_CO)
        PCO= 1d0
        DO J=1,GN2CO
          PCO= PCO * ( RCOI - NUCO(J) ) ! P_{CO,J}(R_CO)
          QQ2= QQ2 + DCMPLX( AA(JJ,KS)*PCO, AA(JJ+1,KS)*PCO )
          JJ= JJ + 2
        END DO

C      QQ3=(1d0,0d0)                     ! *** QQ_OH(R_OH)
C      POH= 1d0
C      DO J=1,GN2OH
C        POH= POH * ( ROHI - NUHC(J) )   ! P_{OH,J}(R_OH)
C        QQ3= QQ3 + DCMPLX( AA(JJ,KS)*POH, AA(JJ+1,KS)*POH )
C        JJ= JJ + 2
C      END DO

        QQ4=(1d0,0d0)                   ! *** QQ_HCO(R_HC,R_CO,COS())
        PHC= 1d0
        DO J=0,GNHC
          PCO= PHC
          DO K=0,GNCO
            PCOS= PCO
            IF(J.GT.0.OR.K.GT.0) THEN
              QQ4= QQ4 + DCMPLX( AA(JJ,KS)*PCO, AA(JJ+1,KS)*PCO )
C		Write(6,*) "AA(JJ,KS),AA(JJ+1,KS) =",AA(JJ,KS),"  ",AA(JJ+1,KS)
C		Write(6,*) "ABS(QQ4)**2 =",ABS(QQ4)**2
              JJ= JJ + 2
            END IF
            DO L=1,GNWIN
              PCOS= PCOS * ( RCOSI - NUCOS(L) )
              QQ4= QQ4 + DCMPLX( AA(JJ,KS)*PCOS, AA(JJ+1,KS)*PCOS )
C		Write(6,*) "PCOS,RCOSI,NUCOS(L) =",PCOS,"  ",RCOSI,"  ",NUCOS(L)
C		Write(6,*) "AA(JJ,KS),AA(JJ+1,KS) =",AA(JJ,KS),"  ",AA(JJ+1,KS)
C		Write(6,*) "ABS(QQ4)**2 =",ABS(QQ4)**2

              JJ= JJ + 2
            END DO
            PCO= PCO * ( RCOI - NUCO(K+1) )
          END DO
          PHC= PHC * ( RHCI - NUHC(J+1) )
        END DO

C	Write(6,*) "ABS(QQ4)**2 =",ABS(QQ4)**2

C                                       ! *** konische Durchschneidung
        IF(KS.EQ.1) THEN
          RHCCOS= RHCI * RCOSI              ! R_HC * cos(gamma)
          RHCSIN= RHCI * SQRT(1d0-RCOSI**2) ! R_HC * sin(gamma)
          A= 1D0 + AA(JJ+1,KS)*RHCCOS                   ! 1 + a2*RHCCOS +
     $      + ( AA(JJ+2,KS) + AA(JJ+3,KS)*RCOI ) * RCOI ! + a3*RCOI+a4*RCOI**2
          WURZ= SQRT( A**2 + (AA(JJ,KS)*RHCSIN)**2 + WURADD ) ! WURADD ist PARAMETER.
C	Write(6,*) "A,AA(JJ,KS),RHCSIN,WURADD =",A,"  ",AA(JJ,KS),"  ",
C    $    RHCSIN,"  ",WURADD
C	Write(6,*) "WURZ = ",WURZ
          JJ= JJ + 4
        END IF


        IF(JJ.NE.MTAN(KS)+1) STOP 'POTHCO: MTAN FALSCH !'


C**     > ALLE BRUECHE ZUSAMMENRECHNEN:
        LL= 1

C      PQ= KK(LL,KS)                      ! Konstante ALPHA, 3 einzelne Teilchen.
C      LL= LL + 1
        PQ= EASYM
C	  Write(6,*) "PQ =",PQ
C      PHC= RHCI**IX2HC / ABS(QQ1)**2     ! *** PP_HC(R_HC)
C      DO J=0,GZ2HC
C        PQ= PQ + KK(LL,KS) * PHC
C        LL= LL + 1
C        PHC= PHC * ( RHCI - NUHC(J+1) ) ! P_{HC,J}(R_HC)
C      END DO
        PQ= PQ + V2CH(RHCI)
C	  Write(6,*) "PQ =",PQ


        PCO= RCOI**IX2CO / ABS(QQ2)**2  ! *** PP_CO(R_CO)
        DO J=0,GZ2CO
          PQ= PQ + KK(LL,KS) * PCO
          LL= LL + 1
          PCO= PCO * ( RCOI - NUCO(J+1) ) ! P_{CO,J}(R_CO)
        END DO


C      POH= ROHI**IX2OH / ABS(QQ3)**2     ! *** PP_OH(R_OH)
C      DO J=0,GZ2OH
C        PQ= PQ + KK(LL,KS) * POH
C        LL= LL + 1
C        POH= POH * ( ROHI - NUHC(J+1) ) ! P_{OH,J}(R_OH)
C      END DO
        PQ= PQ + V2OH(ROHI)
C	  Write(6,*) "PQ =",PQ


        NENN= RHCI**(IXHC-IXOH) * RCOI**(IXCO-IXOH) * ROHI**IXOH
     $       / ( ABS(QQ4)**2 + NENADD ) ! *** PP_HCO(R_HC,R_CO,COS())
C	Write(6,*) "NENN =",NENN
C	Write(6,*) "NENADD =",NENADD
C	Write(6,*) "RHCI,RCOI,ROHI =",RHCI,"  ",RCOI,"  ",ROHI
C	Write(6,*) "IXHC,IXOH,IXCO =",IXHC,IXOH,IXCO
C	Write(6,*) "ABS(QQ4)**2 =",ABS(QQ4)**2
        KONUS= 0d0                      ! Konische Durchschneidung:
        IF(KS.EQ.1) THEN                ! (nur auf 1. Flaeche)
          PHC= WURZ * NENN
C		Write(6,*) "PHC,WURZ,NENN =",PHC,"  ",WURZ,"  ",NENN
          DO J=0,GWHC
            PCO= PHC
            DO K=0,GWCO
              PCOS= PCO
              DO L=0,GWWIN
                KONUS= KONUS + KK(LL,KS) * PCOS
C	 Write(6,*) "KONUS,KK(LL,KS),PCOS =",KONUS,"  ",KK(LL,KS),"  ",PCOS
                LL= LL + 1
                PCOS= PCOS * ( RCOSI - NUCOS(L+1) )
              END DO
              PCO= PCO * ( RCOI - NUCO(K+1) )
            END DO
            PHC= PHC * ( RHCI - NUHC(J+1) )
          END DO
          PQ= PQ + KONUS
        END IF
C	Write(6,*) "PHC,PCO,PCOS =",PHC,"  ",PCO,"  ",PCOS
C	Write(6,*) "PQ =",PQ

        PHC= NENN
        DO J=0,GZHC                     ! normale Polynome:
          PCO= PHC
          DO K=0,GZCO
            PCOS= PCO
            DO L=0,GZWIN
              PQ= PQ + KK(LL,KS) * PCOS
              LL= LL + 1
              PCOS= PCOS * ( RCOSI - NUCOS(L+1) )
            END DO
            PCO= PCO * ( RCOI - NUCO(K+1) )
          END DO
          PHC= PHC * ( RHCI - NUHC(J+1) )
        END DO

        IF(LL.NE.MLIN(KS)+1) STOP ' POTHCO: MLIN FALSCH '


c      WRITE(6,'(A,2F6.2,F6.1, A,4G9.2,A,F10.2,F10.4)')
c     $        ' R=',RHCI, RCOI, ACOS(RCOSI)/3.14159*180d0,
c     $       ' Ne:',
c     $       ABS(QQ1)**2, ABS(QQ2)**2, ABS(QQ3)**2, ABS(QQ4)**2,
c     $       ' KO,V[eV]=',KONUS*AU2EV,PQ*AU2EV

C**     > Potential abschliessend justieren:

C        PQ= PQ + 0.0529d0/AU2EV + VPLUS        ! OFFSET(Oct.1994)
        PQ= PQ + 0.055d0/AU2EV + VPLUS         ! OFFSET(Dez.1994)
C	  Write(6,*) "PQ =",PQ

C       > kritische Bereich auf mindestens 6 eV begrenzen:
        IF (ROHI.LT.1.1d0.OR.RHCI.LT.1.3d0.OR.
     $       RCOI.LT.1.5d0.OR.RCOI+ROHI.LT.2.9d0) THEN
          PQ= MAX( 6d0/AU2EV, PQ )      ! >= 6 eV.
        END IF
        POTHCO= MIN( 20d0/AU2EV, PQ )   ! nach oben begrenzen (20eV)

      END IF

 999  RETURN
      END
C*************************************************************
C
      FUNCTION V2OH(R)
C
C  Lit:
C  P. Huxley and J. N. Murell, J. Chem. Soc., Faraday Trans. 2, 79, 323 (1983)
C  K.P.Huber and G.Herzberg, "Molecular Spectra and Nolecular Structure,
C      vol. 4, Constants of Diatomic Molecules"
C      (Van Nostrand Reinhold, New York, 1979)
C  D.H.Mordaunt, M.N.R.Ashfort and R.N. Dixon, J.Chem.Phys, 100, p7360 (1994)
C

      IMPLICIT NONE
      REAL*8
     $     V2OH,                        ! O-H-Potential in a.u.         OUTPUT
     $     R                            ! O-H-Abstand in a.u.           INPUT

C**   > KONSTANTEN:
      REAL*8 AU2ANG, AU2EV
      PARAMETER(AU2ANG=0.529177D0)      ! a_0 / ANGSTROEM
      PARAMETER(AU2EV=27.2116D0)        ! HARTREE / EV

C**   > PARAMETER ZUM EXTENDED RYDBERG-POTENTIAL:
      REAL*8 A1, A2, A3, DE, RE, RHO

C     O-H POTENTIAL:  Ang. -> EV
C     ==============
      A1= 4.507                    ! Huxley etc. nach Daten aus Herzberg.
      A2= 4.884
      A3= 3.795
      DE= 4.621 / AU2EV
      RE= 0.9696

C      A1= 4.7665                 ! Mordaunt, Ashfort and Dixon
C      A2= 6.5122
C      A3= 5.9014
C      DE= 4.6210 / AU2EV
C      RE= 0.96966

      RHO= ( R*AU2ANG - RE )

      V2OH= -DE *
     $     ( 1 + A1*RHO + A2*RHO**2 + A3*RHO**3 ) *
     $     EXP(-A1*RHO)

      RETURN
      END
C***********************************************************
C
      FUNCTION V2CH(R)
C
C  Lit:
C  P. Huxley and J. N. Murell, J. Chem. Soc., Faraday Trans. 2, 79, 323 (1983)
C  K.P.Huber and G.Herzberg, "Molecular Spectra and Nolecular Structure,
C      vol. 4, Constants of Diatomic Molecules"
C      (Van Nostrand Reinhold, New York, 1979)
C

      IMPLICIT NONE
      REAL*8
     $     V2CH,                        ! C-H-Potential in a.u.         OUTPUT
     $     R                            ! C-H-Abstand in a.u.           INPUT

C**   > KONSTANTEN:
      REAL*8 AU2ANG, AU2EV
      PARAMETER(AU2ANG=0.529177D0)      ! a_0 / ANGSTROEM
      PARAMETER(AU2EV=27.2116D0)        ! HARTREE / EV

C**   > PARAMETER ZUM EXTENDED RYDBERG-POTENTIAL:
      REAL*8 A1, A2, A3, DE, RE, RHO

C     C-H Potential:  Ang. -> eV
C     ==============
      A1= 3.836
      A2= 3.511
      A3= 2.268
      DE= 3.631 / AU2EV
      RE= 1.1199

      RHO= ( R*AU2ANG - RE )

      V2CH= -DE *
     $     ( 1 + A1*RHO + A2*RHO**2 + A3*RHO**3 ) *
     $     EXP(-A1*RHO)

      RETURN
      END


c *********************  Mail Program Here  ***************
!	PROGRAM	HCO
!	Real*8 POTHCO
!	call pot3in()
!
!	Write(6,*) POTHCO(2.1159223d0, 2.2538912d0, -0.6053381d0,1)
!	Stop
!	End Program HCO
